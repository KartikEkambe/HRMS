HRMS DataBase Design :


## tblRoles Create Table Fore Roles

create table tblRoles
(
RoleId int primary key identity(1,1),
RoleName varchar(50) not null
)

## user table for login details

Create table tblUser
(
UserId int primary key identity(1,1),
FirstName varchar(50) not null,
LastName varchar(50) not null,
Email varchar(100) unique not null,
Password varchar(50) not null,
MobileNumber varchar(15) ,
DOB date,
Geneder varchar(20),
RoleId int foreign key references tblRoles(RoleId),
CreatedDate datetime
)





 # Offer Letter Table
CREATE TABLE OfferLetters
(
    Id INT PRIMARY KEY IDENTITY(1,1),          -- Auto-incrementing primary key
    EmployeeName NVARCHAR(100) NOT NULL,       -- Employee's name
    DateOfOffer DATE NOT NULL,                 -- Date the offer was made
    DateOfJoining DATE NOT NULL,               -- Date of joining
    AnnualSalary DECIMAL(18, 2) NOT NULL,      -- Annual CTC
    BasicSalary DECIMAL(18, 2) NOT NULL,       -- Basic Salary
    ESIC DECIMAL(18, 2) NOT NULL,              -- Employee ESIC contribution
    ProfessionalTax DECIMAL(18, 2) NOT NULL,   -- Professional Tax
    DA DECIMAL(18, 2) NOT NULL,                -- Dearness Allowance
    HRA DECIMAL(18, 2) NOT NULL,               -- House Rent Allowance
    ConveyanceAllowance DECIMAL(18, 2) NOT NULL,-- Conveyance Allowance
    MedicalAllowance DECIMAL(18, 2) NOT NULL,  -- Medical Allowance
    ProvidentFund DECIMAL(18, 2) NOT NULL,     -- Provident Fund
    Designation NVARCHAR(100) NOT NULL,        -- Job title
    Location NVARCHAR(100) NOT NULL            -- Location
);






# EmployeeData Table for softgrid

-- Create a sequence for auto-incrementing the EmployeeId
CREATE SEQUENCE  EmployeeIdSequence
    START WITH  1200 -- Starting number for auto-increment
    INCREMENT BY 1;
 
 
 CREATE TABLE tblEmployeeSoftGrid (
    EmployeeId NVARCHAR(15)unique not null, -- Will be generated by the trigger
    EmployeeName NVARCHAR(100) NOT NULL,
    Designation NVARCHAR(100),
    Department NVARCHAR(100),
    AnnualSalary DECIMAL(18, 2),
    UAN BIGINT unique not null,
    PFNumber NVARCHAR(50) unique not null,
    PanNumber NVARCHAR(50) unique not null,
    AadharNumber BIGINT unique not null,
    BankName NVARCHAR(100),
    AccountNumber NVARCHAR(50) unique not null,
    CONSTRAINT PK_tblEmployeeSoftGrid PRIMARY KEY (EmployeeId)
);

-- Create a trigger to automatically generate EmployeeId
  drop trigger trg_SetEmployeeId

CREATE TRIGGER trg_SetEmployeeId
ON dbo.tblEmployeeSoftGrid
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @nextId NVARCHAR(50)

    -- Generate the next employee ID using the sequence
    SELECT @nextId = 'SG' + RIGHT('00000' + CAST(NEXT VALUE FOR dbo.EmployeeIdSequence AS NVARCHAR(10)), 5)

    -- Insert the new row with the generated EmployeeId
    INSERT INTO dbo.tblEmployeeSoftGrid (EmployeeId, EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber)
    SELECT @nextId, EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber
    FROM inserted
END
GO






INSERT INTO tblEmployeeSoftGrid (EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber)
VALUES ('Pravin Bhandare', 'Software Engineer', 'IT', 500000, 123456789, 'PF12345', 'ABCDE1234F', 123456789012, 'Bank of Baroda', '1234567890');







## Employee Table for bright infotech
CREATE SEQUENCE  EmployeeIdSequenceforBI
    START WITH  1300 -- Starting number for auto-increment
    INCREMENT BY 1;
 
 
 CREATE TABLE tblEmployeesBrightInfotech (
    EmployeeId NVARCHAR(15)unique not null, -- Will be generated by the trigger
    EmployeeName NVARCHAR(100) NOT NULL,
    Designation NVARCHAR(100),
    Department NVARCHAR(100),
    AnnualSalary DECIMAL(18, 2),
    UAN BIGINT unique not null,
    PFNumber NVARCHAR(50) unique not null,
    PanNumber NVARCHAR(50) unique not null,
    AadharNumber BIGINT unique not null,
    BankName NVARCHAR(100),
    AccountNumber NVARCHAR(50) unique not null,
    CONSTRAINT PK_tblEmployeesBrightInfotech PRIMARY KEY (EmployeeId)
);

-- Create a trigger to automatically generate EmployeeId
   

CREATE TRIGGER trg_SetEmployeeIdforBI
ON dbo.tblEmployeesBrightInfotech
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @nextId NVARCHAR(50)

    -- Generate the next employee ID using the sequence
    SELECT @nextId = 'BI' + RIGHT('00000' + CAST(NEXT VALUE FOR  EmployeeIdSequenceforBI AS NVARCHAR(10)), 5)

    -- Insert the new row with the generated EmployeeId
    INSERT INTO  tblEmployeesBrightInfotech (EmployeeId, EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber)
    SELECT @nextId, EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber
    FROM inserted
END
GO






INSERT INTO tblEmployeesBrightInfotech (EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber)
VALUES ('Pravin Bhandare', 'Software Engineer', 'IT', 500000, 123456789, 'PF12345', 'ABCDE1234F', 123456789012, 'Bank of Baroda', '1234567890');





## Employee Table for UAS It

CREATE SEQUENCE  EmployeeIdSequenceforUAS
    START WITH  1201 -- Starting number for auto-increment
    INCREMENT BY 1;
 
 
 CREATE TABLE tblEmployeesUAS(
    EmployeeId NVARCHAR(15)unique not null, -- Will be generated by the trigger
    EmployeeName NVARCHAR(100) NOT NULL,
    Designation NVARCHAR(100),
    Department NVARCHAR(100),
    AnnualSalary DECIMAL(18, 2),
    UAN BIGINT unique not null,
    PFNumber NVARCHAR(50) unique not null,
    PanNumber NVARCHAR(50) unique not null,
    AadharNumber BIGINT unique not null,
    BankName NVARCHAR(100),
    AccountNumber NVARCHAR(50) unique not null,
    CONSTRAINT PK_tblEmployeesUAS PRIMARY KEY (EmployeeId)
);

-- Create a trigger to automatically generate EmployeeId
   

CREATE TRIGGER trg_SetEmployeeIdforUAS
ON dbo.tblEmployeesUAS
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @nextId NVARCHAR(50)

    -- Generate the next employee ID using the sequence
    SELECT @nextId = 'UAS' + RIGHT('00000' + CAST(NEXT VALUE FOR  EmployeeIdSequenceforUAS AS NVARCHAR(10)), 5)

    -- Insert the new row with the generated EmployeeId
    INSERT INTO  tblEmployeesUAS (EmployeeId, EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber)
    SELECT @nextId, EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber
    FROM inserted
END
GO






INSERT INTO tblEmployeesUAS (EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber)
VALUES ('Pravin Bhandare', 'Software Engineer', 'IT', 500000, 123456789, 'PF12345', 'ABCDE1234F', 123456789012, 'Bank of Baroda', '1234567890');



## Employee Table for MPB Digital India

CREATE SEQUENCE  EmployeeIdSequenceforMPB
    START WITH  9901 -- Starting number for auto-increment
    INCREMENT BY 1;
 
 
 CREATE TABLE tblEmployeesMPB(
    EmployeeId NVARCHAR(15)unique not null, -- Will be generated by the trigger
    EmployeeName NVARCHAR(100) NOT NULL,
    Designation NVARCHAR(100),
    Department NVARCHAR(100),
    AnnualSalary DECIMAL(18, 2),
    UAN BIGINT unique not null,
    PFNumber NVARCHAR(50) unique not null,
    PanNumber NVARCHAR(50) unique not null,
    AadharNumber BIGINT unique not null,
    BankName NVARCHAR(100),
    AccountNumber NVARCHAR(50) unique not null,
    CONSTRAINT PK_tblEmployeesMPB PRIMARY KEY (EmployeeId)
);

-- Create a trigger to automatically generate EmployeeId
   

CREATE TRIGGER trg_SetEmployeeIdforMPB
ON dbo.tblEmployeesMPB
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @nextId NVARCHAR(50)

    -- Generate the next employee ID using the sequence
    SELECT @nextId = 'M' + RIGHT('00000' + CAST(NEXT VALUE FOR  EmployeeIdSequenceforMPB AS NVARCHAR(10)), 5)

    -- Insert the new row with the generated EmployeeId
    INSERT INTO  tblEmployeesMPB (EmployeeId, EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber)
    SELECT @nextId, EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber
    FROM inserted
END
GO






INSERT INTO tblEmployeesMPB (EmployeeName, Designation, Department, AnnualSalary, UAN, PFNumber, PanNumber, AadharNumber, BankName, AccountNumber)
VALUES ('Kartik Ekambe', 'Software Developer', 'Software Developement', 420000, 123456789, 'PF12345', 'ADOPE0033A', 767018115389, 'State Bank Of India', '62440255286');
